/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
// import { useDispatch, useSelector } from 'react-redux'

import { useGLTF, useAnimations } from '@react-three/drei'
import {useStore} from '../../zustand/store'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('https://res.cloudinary.com/dxxx1wdbm/image/upload/v1655503357/portfolio/body_fnui8n.glb')
  const { actions } = useAnimations(animations, group)
  const positionX = useStore(state => state.positionX)

  const isWalking = useStore(state => state.isWalking)
  const isWalkingBack = useStore(state => state.isWalkingBack)

  useEffect(()=>{
    actions.idle.fadeOut(0.5)
    actions.walk.fadeOut(0.5)
    actions.walkBack.fadeOut(0.5)

    if(isWalking === false && isWalkingBack===false){
    actions.idle.reset().fadeIn(0.5).play()
    }else if(isWalking===true){
      actions.walk.reset().fadeIn(0.5).play();
    }else if(isWalkingBack===true){
      actions.walkBack.reset().fadeIn(0.5).play();
    }else{
      actions.idle.reset().fadeIn(0.5).play()
    }
  },[isWalking,isWalkingBack])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature003" position={[positionX, -5, 0]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={0.5}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Group1003" geometry={nodes.Group1003.geometry} material={nodes.Group1003.material} skeleton={nodes.Group1003.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('https://res.cloudinary.com/dxxx1wdbm/image/upload/v1655503357/portfolio/body_fnui8n.glb')
